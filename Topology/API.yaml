openapi: 3.0.0
info:
  version: 1.0.0
  title: Topology
  contact:
    name: Ilija Vukotic
    url: https://github.com/ivukotic/VPservice
    email: ivukotic@uchicago.edu
servers:
  - url: "http://localhost:3000"
paths:
  /healthz:
    get:
      summary: "For a liveness probe. Returns version."
      responses:
          description: Returns OK.
          content:
            text/plain:
              schema:
                type: string
              example: OK
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /liveness:
    post:
      summary: 'For XCache servers to report to. Send basic info.'
      requestBody:
        description: XCache object in JSON format
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XCacheServer'
              example:
                id: mwt2_1
                site: mwt2
                address: xcache1.mwt2.org
                size: 12345678
      responses:
        "200":
          description: Returns OK.
          content:
            text/plain:
              schema:
                type: string
              example: OK
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /prefix:
    get:
      summary: For a client to ask for a xcache to use.
      responses:
        '200':
          description: Returns address of the XCache server.
          content:
            text/plain:
              example: root://xcache3.mwt2.org:1094
        '500':
          $ref: '#/components/responses/GeneralError'
    parameters:
    - name: client
      description: client name. Can be ATLAS DDM endpoint, site, analysis farm
      in: query
      required: true
      schema:
        type: string
      example: MWT2_SCRATCHDISK
    - name: filename
      description: filename to be looked for
      in: query
      required: true
      schema:
        type: string
      example: scope:xAOD.123.23.root

components:
  
  schemas:

    Version:
      type: string
      description: "server & api version"

    XCacheServer:
      type: object
      required:
        - id
        - site
        - address
      properties:
        id:
          type: string
          description: ID of the server.
          example: xcache_dfnu4dfv4_2ed8f
        site:
          type: string
          description: site that xcache server belongs to.
          example: MWT2_Caches
        address:
          type: string
          description: FQDN or IP of xcache server.
          example: xcache1.mwt2.org
        size:
          type: integer
          format: int64
          description: Total server disk space in MB.
          minimum: 0
          example: 123123123123

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  
  parameters:
    xc_site:
      name: xc_site
      in: query
      description: "site that xcache server belongs to."
      required: true
      schema: 
        type: integer
        format: int32

  responses: 
    NotFound:
      description: Entity not found.
    IllegalInput: 
      description: Illegal input for operation.
    GeneralError: 
      description: General Error
      content: 
        application/json: 
          schema: 
            $ref: "#/componens/schemas/Error"
