openapi: 3.0.0
info:
  version: 1.0.0
  title: Topology
servers:
  - url: 'http://localhost:3000'
paths:
  /healthz:
    get:
        summary: 'For a liveness probe. Returns version.'
        responses:
            '200':
                description: 'Returns version of code.'
            default:
                description: Unexpected error
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Error'
  /liveness:
      post:
          summary: 'For XCache servers to report to. Send basic info.'
          responses:
            '200':
                description: 'Returns version of code.'
            default:
                description: Unexpected error
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Error'
  /user:
    get:
      summary: 'Sample endpoint: Returns details about a particular user'
      operationId: listUser
      tags:
        - user
      parameters:
        - name: id
          in: query
          description: ID of the user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 'Sample response: Details about a user by ID'
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Version:
        type: integer
    XCacheServer:
        type: object
        required:
            - id
            - address
            - size
        properties:
            id:
                type: string
            address:
                type: string
            size:
                type: integer
                format: int64
    Client:
        type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string